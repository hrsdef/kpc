import {
    Layout, Header, Body, Icon, Tabs, Tab,
    Dropdown, DropdownMenu, DropdownItem,
    Button, Select, Option,
} from 'kpc';
import {makeHeaderStyles, makeLayoutStyles} from './styles';
import {Link} from '../components/link';
import {Transition} from 'intact';

const nav = [
    {
        title: '字体',
        href: '/font',
        index: 'font'
    },
    {
        title: '设计',
        href: '/docs/design/about/',
        index: 'design',
    },
    {
        title: '组件',
        href: '/docs/vue/',
        index: 'document'
    },
    {
        title: '资源',
        href: '/resources',
        index: 'resource'
    },
    {
        title: '解决方案',
        href: '/solutions',
        index: 'solution'
    }
];

const {themeColor, colorList, curLang} = this.get();

<Layout class={{[$props.className]: $props.className, [makeLayoutStyles()]: true}}>
    <Header fixed class={makeHeaderStyles()}>
        <div class="logo" ev-click={() => Link.to('/')}></div>
        <div class="main">
            <Tabs size="large" value={$props.navIndex}>
                <Tab v-for={nav} value={$value.index}>
                    <Link href={$value.href}>{$value.title}</Link>
                </Tab>
                {
                // 语言切换功能
                /* <Tab>
                    <div class="lang-wrapper">
                        <div class="lang-box">
                            <div 
                                class={{active: curLang === 'cn'}} 
                                ev-click={this.setLang.bind(this, 'cn')}
                            >zh-CN</div>
                            <div 
                                class={{active: curLang === 'en'}} 
                                ev-click={this.setLang.bind(this, 'en')}
                            >en-US</div>
                        </div>    
                    </div>
                </Tab> */}
            </Tabs>
            <Dropdown trigger="click"
                container={dom => dom}
                position={{my: 'center top+17', at: 'center bottom', collision: 'flipfit'}}
            >
                <Button type="none" icon class="menu-btn">
                    <Icon class="ion-navicon" size="large" />
                </Button>
                <DropdownMenu class="nav-menu-list">
                    <DropdownItem v-for={nav}
                        class={{
                            active: $value.index === $props.navIndex
                        }}
                        ev-select={() => Link.to($value.href)}
                    >{$value.title}</DropdownItem>
                </DropdownMenu>
            </Dropdown>
            <Select width="70" container={dom => dom} value="v3"
                size="small"
                ev-$change:value={this.onChangeVersion}
                class="versions"
            >
                <Option value="v1">v1</Option>
                <Option value="v2">v2</Option>
                <Option value="v3">v3</Option>
            </Select>
            <div class="theme-color-box" 
                ev-mouseenter={this.showColorList} 
                ev-mouseleave={this.hideColorList}
            >
                <div>主题色</div>
                <div class="cur-color">
                    <div 
                        class="color-item" 
                        style={{background: themeColor}} 
                    ></div>
                </div>
                <Transition name="k-slidedown">
                    <div class="theme-color-option" v-if={this.get('showThemeColor')}>
                        <div v-for={colorList}>
                            <div 
                                class="color-item" 
                                style={{background: $value}} 
                                ev-click={this.handleColorChange.bind(this, $value)}
                            >
                                <Icon 
                                    v-if={themeColor === $value} 
                                    class="icon ion-checkmark-round"
                                ></Icon>
                            </div>
                        </div>
                    </div>
                </Transition>
            </div>
        </div>
    </Header>
    <Layout>
        <template>
            <b:aside />
        </template>
        <Body>
            <template>
                <b:content />
            </template>
        </Body>
    </Layout>
</Layout>
