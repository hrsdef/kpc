import { TransitionGroup } from 'intact';
import { getRestProps } from '../utils';
import { makeTagsStyles } from './styles';
import { Tag } from './';
import { Tooltip } from '../tooltip';
import { Tags } from './tags';
import { Virtual } from '../virtual';

const { className, nowrap, size, border, draggable } = this.get();

const classNameObj = {
    'k-tags': true,
    'k-nowrap': nowrap,
    'k-draggable': draggable,
    [makeTagsStyles()]: true,
    [className]: className,
}

const { containerRef, children, hiddenChildren } = this.nowrap;
const vNodes = children.value;

/**
 * We should always render Tooltip in nowrap mode, otherwise it will be removed while we close one tag.
 * Because we will render all tags to calculate the width
 */
<div class={classNameObj} {...getRestProps(this)} ref={containerRef}>
    <TransitionGroup name="k-fade" v-if={!nowrap}>
        {vNodes}
    </TransitionGroup>
    <template v-else>{vNodes}</template>
    <Tooltip
        v-if={nowrap}
        key="$tooltip"
        hoverable
        theme="light"
        class="k-tags-tooltip"
    >
        <Tag key="$more"
            class={{"k-tags-more": true, 'c-hidden': !hiddenChildren.value.length}}
            size={size}
            border={border}
        >
            +{hiddenChildren.value.length}
        </Tag>
        <b:content>
            <div class={classNameObj}>{hiddenChildren.value}</div>
        </b:content>
    </Tooltip>
</div>
