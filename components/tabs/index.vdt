import {Button} from '../button';
import {getRestProps} from '../utils';
import {makeStyles} from './styles';

const {className, children, vertical, size, type} = this.get();
const {
    isScroll, offset, enablePrev, enableNext,
    prev, next, scrollRef, wrapperRef
} = this.scroll;
const classNameObj = {
    'k-tabs': true,
    [`k-size-${size}`]: size,
    'k-vertical': vertical,
    [`k-type-${type}`]: true,
    [`k-is-scroll`]: isScroll.value,
    [className]: className,
    [makeStyles()]: true,
};

<div class={classNameObj} {...getRestProps(this)}>
    <Button class="k-tabs-prev" type="none" icon
        v-if={isScroll.value}
        key="prev"
        size={size}
        disabled={!enablePrev.value}
        ev-click={prev}
    >
        <i class={vertical ? "ion-ios-arrow-up" : "ion-ios-arrow-left"}></i>
    </Button>
    <div class="k-tabs-scroll c-clearfix" ref={scrollRef}>
        <div class="k-tabs-wrapper"
            ref={wrapperRef}
            style={{transform: vertical ? `translateY(${offset.value}px)` : `translateX(${offset.value}px)`}}
        >
            {children}
            <div class="k-tabs-active-bar" style={this.activeBar.value}></div>
        </div>
    </div>
    <Button class="k-tabs-next" type="none" icon
        v-if={isScroll.value}
        key="next"
        size={size}
        disabled={!enableNext.value}
        ev-click={next}
    >
        <i class={vertical ? "ion-ios-arrow-down" : "ion-ios-arrow-right"}></i>
    </Button>
</div>
